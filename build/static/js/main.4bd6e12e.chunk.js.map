{"version":3,"sources":["NavBarContent.js","CardContent.js","App.js","serviceWorker.js","Edit.js","See.js","Delete.js","Add.js","index.js"],"names":["NavBarContent","react_default","a","createElement","Navbar_default","bg","variant","Brand","react_router_dom","className","to","Component","CardContent","isLoading","this","props","addCharacter","type","class","userDetails","sendData","map","index","style","maxWidth","minHeight","src","image","alt","name","width","height","shortDescription","role","aria-label","concat","id","loadingMessage","React","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCharacter","Axios","get","then","result","setState","characters","data","catch","err","console","log","state","NavBarContent_NavBarContent","src_CardContent","Boolean","window","location","hostname","match","Edit","onChangeCharacterName","bind","assertThisInitialized","onChangeShortDescr","onChangeLongDescr","onChangeImg","onSubmit","input","createRef","error","isLoaded","description","file","imagePreviewUrl","_this2","axios","params","response","e","target","value","_this3","preventDefault","reader","FileReader","files","output","document","getElementById","onloadend","readAsDataURL","obj","substr","indexOf","put","history","push","alert","_this4","Button_default","onClick","confirm","Form_default","Group","Label","Control","onChange","defineProperty","controlId","as","rows","See","Add","delete","res","Card_default","text","Header","Body","Title","Text","deleteCharacter","i","post","show","routing","react_router","exact","path","component","Delete","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bd6e12e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class NavBarContent extends Component {\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand>\n    <Link className=\"linkto\" to={`/`}>Characters DataBase</Link>\n    </Navbar.Brand>\n  </Navbar>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nclass CardContent extends React.Component {\n\n  render() {\n    const { isLoading } = this.props;\n    const addCharacter =\n      <div className=\"col-12\"> \n      <Link to={\"/Add\"} type=\"button\" className=\"mb-5 btn btn-secondary\"><i class=\"fas fa-plus-square fa-5x\"></i></Link>\n      </div>\n\n    const userDetails = this.props.sendData.map(index =>\n      <div\n        className=\"col-xs-12 col-md-6 col-xl-4 p-5 border border-secondary mx-auto mt-4 text-center d-flex flex-column\"\n        style={{ maxWidth: \"300px\", minHeight: \"250px\" }}\n      >\n        <div className=\"mb-auto\">\n          <img\n            className=\"img-thumbnail rounded-circle mx-auto mb-2 shadow-sm\"\n            src={'data:image/jpeg;base64,' + index.image}\n            alt={index.name}\n            style={{ width: \"100px\", height: \"100px\" }}\n          />\n          <h4 className=\"border-bottom pb-2 mb-3\">{index.name}</h4>\n          <span className=\"text-muted-5\">{index.shortDescription}</span>\n        </div>\n        \n          <div class=\"mt-5 btn-group\" role=\"group\" aria-label=\"Basic example\">\n            <Link to={`/Edit/${index.id}`} type=\"button\" class=\"btn btn-light\"><i class=\"far fa-edit fa-2x\"></i></Link>\n            <Link to={`/See/${index.id}`} type=\"button\" class=\"btn btn-light\"><i class=\"far fa-eye fa-2x\"></i></Link>\n            <Link to={`/Delete/${index.id}`} type=\"button\" class=\"btn btn-light\"><i class=\"fas fa-trash-alt fa-2x\"></i></Link>\n          </div>\n      </div>\n\n    );\n\n    const loadingMessage = <span className=\"d-flex m-auto\">Loading...</span>;\n\n    return (\n\n      <div className=\"d-flex flex-wrap mt-5\">\n        {addCharacter}\n        {isLoading ? loadingMessage : userDetails}\n      </div>\n    );\n  }\n}\nexport default CardContent;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport NavBarContent from './NavBarContent'\nimport CardContent from './CardContent'\nimport Axios from 'axios'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      characters: []\n    }\n  }\n\n  componentDidMount() {\n    this.getCharacter()\n  }\n\n  getCharacter = () => {\n    Axios\n      .get('https://character-database.becode.xyz/characters')\n      .then(result => this.setState({\n        characters: result.data\n      }))\n      .catch(err => console.log(err))\n  }\n\n  HideComp \n\n  render() {\n\n    return (\n      <div className=\"App\">\n      <div>\n        <NavBarContent />\n        </div>\n\n        <div>\n        <CardContent sendData={this.state.characters} />\n      </div>\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nexport default class Edit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\n        this.onChangeShortDescr = this.onChangeShortDescr.bind(this);\n        this.onChangeLongDescr = this.onChangeLongDescr.bind(this);\n        this.onChangeImg = this.onChangeImg.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.input = React.createRef();\n\n        this.state = {\n            error: null,\n            isLoaded: false,\n            name: '',\n            shortDescription: '',\n            description: '',\n            image: '',\n            file: '',\n            imagePreviewUrl: ''\n        }\n    }\n\n    /*api mount*/\n    componentDidMount() {\n        axios.get(\"https://character-database.becode.xyz/characters/\" + this.props.match.params.id)\n            .then(\n                (response) => {\n                    //console.log(JSON.stringify(response.data));\n                    this.setState({\n                        name: response.data.name,\n                        shortDescription: response.data.shortDescription,\n                        description: response.data.description,\n                        //image : response.data.image.substr(this.image.indexOf(',') + 1)\n                        image: response.data.image,\n                    });\n                    //console.log(response.data.image);\n                })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    /*fct to setStage on change*/\n    onChangeCharacterName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeShortDescr(e) {\n        this.setState({\n            shortDescription: e.target.value\n        })\n    }\n    onChangeLongDescr(e) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeImg(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        let output = document.getElementById('output-img');\n        //console.log(output);\n        //base64 convert\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n            //file preview\n            output.src = reader.result\n        }\n        reader.readAsDataURL(file)\n    }\n\n    /*fct submit + update the api */\n    onSubmit(e) {\n        e.preventDefault();\n        /*check if image has been selected otherwise take the previous one*/\n        if (!this.state.imagePreviewUrl) {\n            this.state.imagePreviewUrl = this.state.image;\n        }\n        else {\n            this.state.imagePreviewUrl = this.state.imagePreviewUrl;\n        }\n        /*check if no empty fieds*/\n        if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl) {\n            const obj = {\n                name: this.state.name,\n                shortDescription: this.state.shortDescription,\n                description: this.state.description,\n                image: this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n            };\n            axios.put('https://character-database.becode.xyz/characters/' + this.props.match.params.id, obj)\n                .then(\n                    this.props.history.push(\"/\")\n                );\n        }\n        else {\n            alert(\"No empty field allowed\");\n        }\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <NavBarContent />\n                <Button className=\"mt-5 w-100 btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('Do you want leave the character adding?')) this.props.history.push(\"/\"); }}>Cancel</Button>\n                <div className=\"col-xs-12 col-md-6 col-xl-4 p-5 mx-auto mt-4 text-center d-flex flex-column\">\n\n                    <div className=\"mb-auto\">\n                        <img\n                            className=\"img-thumbnail rounded-circle mx-auto mb-2 shadow-sm\"\n                            src={'data:image/jpeg;base64,' + this.state.image}\n                            alt={this.state.name}\n                            style={{ width: \"100px\", height: \"100px\" }}\n                        />\n                        <h4 className=\"border-bottom pb-3 mb-3\">{this.state.name}</h4>\n                        <span className=\"text-muted-5\">{this.state.shortDescription}</span>\n                        <div className=\"border-top mt-2 pt-2 container\">\n                            {this.state.description}\n                        </div>\n                    </div>\n\n                </div>\n\n                <div>\n                    \n                    <Form className=\"m-5\" onSubmit={this.onSubmit}>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.onChangeCharacterName} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Short Description</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.onChangeShortDescr} type=\"text\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"3\" onChange={this.onChangeLongDescr} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Image</Form.Label>\n                            <div className=\"grid-container-img-add\">\n                                <div className=\"grid-container-img-add\">\n                                    <div className=\"file\"><input className=\"form-control-file\" type=\"file\" name=\"image\" id=\"UploadedFile\" onChange={(e) => this.onChangeImg(e)} /></div>\n                                    <div className=\"preview\"><img id=\"output-img\" className=\"output\" alt=\"\" src={`data:image/jpeg;base64,${this.state.image}`} /></div>\n                                </div>\n                            </div>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                    </Button>\n                    </Form>;\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nexport default class See extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '', shortDescription: '', description: '', characters: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getCharacter()\n    }\n\n    getCharacter = () => {\n        Axios\n            .get('https://character-database.becode.xyz/characters/' + this.props.match.params.id)\n            .then(result => this.setState({\n                characters: result.data\n            }))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <div>\n                <NavBarContent />\n                <div className=\"col-xs-12 col-md-6 col-xl-4 p-5 mx-auto mt-4 text-center d-flex flex-column\">\n\n                    <div className=\"mb-auto\">\n                        <img\n                            className=\"img-thumbnail rounded-circle mx-auto mb-2 shadow-sm\"\n                            src={'data:image/jpeg;base64,' + this.state.characters.image}\n                            alt={this.state.characters.name}\n                            style={{ width: \"100px\", height: \"100px\" }}\n                        />\n                        <h4 className=\"border-bottom pb-3 mb-3\">{this.state.characters.name}</h4>\n                        <span className=\"text-muted-5\">{this.state.characters.shortDescription}</span>\n                        <div className = \"border-top mt-2 pt-2 container\">\n                            {this.state.characters.description}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\n\nexport default class Add extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            shortDescription: '',\n            description: '',\n            image: ''\n        }\n\n        const { name } = this.state;\n    }\n\n\n    /*fct to delete characters*/\n    deleteCharacter(e) {\n        console.log(e)\n        axios.delete(\"https://character-database.becode.xyz/characters/\" + e)\n            .then(res => console.log(res.data));\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <NavBarContent />\n\n                <Card bg=\"warning\" text=\"white\" className=\"w-100\">\n                    <Card.Header>Confirmation</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Delete Content</Card.Title>\n                        <Card.Text>\n                            Are you sure to delete this character ?\n        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Link className=\"linkto\" to={`/`}><Button className=\"border w-100\" variant=\"danger\" to=\"/\" onClick={(e) => { this.deleteCharacter(this.props.match.params.id) }}>Yes</Button></Link>\n                <Link className=\"border linkto\" to={`/`}><Button className=\"w-100\" variant=\"primary\" >No</Button></Link>\n\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\n\nexport default class Add extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\n        this.onChangeShortDescr = this.onChangeShortDescr.bind(this);\n        this.onChangeLongDescr = this.onChangeLongDescr.bind(this);\n        this.onChangeImg = this.onChangeImg.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            shortDescription: '',\n            description: '',\n            image: ''\n        }\n\n        const { name } = this.state;\n    }\n\n    /*fct to setStage on change*/\n    onChangeCharacterName(e) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    onChangeShortDescr(e) {\n        this.setState({\n            shortDescription: e.target.value\n        })\n    }\n    onChangeLongDescr(e) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeImg(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        let output = document.getElementById('output');\n\n        //base64 convert\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n            //file preview\n            output.src = reader.result\n        }\n        reader.readAsDataURL(file)\n    }\n\n\n    onSubmit(i) {\n        i.preventDefault();\n        /*check if no empty fieds*/\n        if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl) {\n            const obj = {\n                name: this.state.name,\n                shortDescription: this.state.shortDescription,\n                description: this.state.description,\n                image: this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n            };\n            axios.post('https://character-database.becode.xyz/characters/', obj)\n                .then(\n                    this.props.history.push(\"/\")\n                );\n            console.log(obj);\n            this.setState({\n                name: '',\n                shortDescription: '',\n                description: '',\n                image: '',\n                show: ''\n            })\n        }\n        else {\n            alert(\"No empty field allowed\");\n        }\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <NavBarContent />\n                <Button className=\"w-100 mt-5 btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('Do you want leave the character adding?')) this.props.history.push(\"/\"); }}>Cancel</Button>\n                <Form className=\"m-5\" onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" onChange={this.onChangeCharacterName} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Short Description</Form.Label>\n                        <Form.Control type=\"text\" onChange={this.onChangeShortDescr} type=\"text\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" onChange={this.onChangeLongDescr} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Image</Form.Label>\n                        <div className=\"grid-container-img-add\">\n                            <div className=\"file\"><input className=\"form-control-file\" type=\"file\" name=\"image\" id=\"UploadedFile\" onChange={(e) => this.onChangeImg(e)} /></div>\n                            <div className=\"preview\"><img id=\"output\" className=\"output\" alt=\"\" /></div>\n                        </div>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>;\n                </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Edit from './Edit';\nimport See from './See';\nimport Delete from './Delete';\nimport Add from './Add';\n\nconst routing = (\n    <Router>\n    <div>\n        <Route exact path=\"/\" component = {App} />\n        <Route exact path=\"/Edit/:id\" component={Edit} />\n        <Route exact path=\"/See/:id\" component={See} />\n        <Route exact path=\"/Delete/:id\" component={Delete} />\n        <Route exact path=\"/Add\" component={Add} />\n    </div>\n    </Router>\n)\n\nReactDOM.render(routing,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}