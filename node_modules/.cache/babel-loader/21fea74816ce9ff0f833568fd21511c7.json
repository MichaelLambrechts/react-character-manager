{"ast":null,"code":"import _defineProperty from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/michael/Documents/react-manager-project/react-character-manager/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/michael/Documents/react-manager-project/react-character-manager/src/Add.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nvar Add =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Add, _Component);\n\n  function Add(props) {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Add).call(this, props));\n    _this.onChangeCharacterName = _this.onChangeCharacterName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeShortDescr = _this.onChangeShortDescr.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeLongDescr = _this.onChangeLongDescr.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeImg = _this.onChangeImg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      name: '',\n      shortDescription: '',\n      description: '',\n      image: ''\n    };\n    var name = _this.state.name;\n    return _this;\n  }\n  /*fct to setStage on change*/\n\n\n  _createClass(Add, [{\n    key: \"onChangeCharacterName\",\n    value: function onChangeCharacterName(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeShortDescr\",\n    value: function onChangeShortDescr(e) {\n      this.setState({\n        shortDescription: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeLongDescr\",\n    value: function onChangeLongDescr(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeImg\",\n    value: function onChangeImg(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new FileReader();\n      var file = e.target.files[0];\n      var output = document.getElementById('output'); //base64 convert\n\n      reader.onloadend = function () {\n        _this2.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        }); //file preview\n\n\n        output.src = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(i) {\n      i.preventDefault();\n      /*check if no empty fieds*/\n\n      if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl) {\n        var obj = {\n          name: this.state.name,\n          shortDescription: this.state.shortDescription,\n          description: this.state.description,\n          image: this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n        };\n        axios.post('https://character-database.becode.xyz/characters/', obj).then(this.props.history.push(\"/\"));\n        console.log(obj);\n        this.setState({\n          name: '',\n          shortDescription: '',\n          description: '',\n          image: '',\n          show: ''\n        });\n      } else {\n        alert(\"No empty field allowed\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(NavBarContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"w-100 mt-5 btn btn-danger\",\n        to: \"/\",\n        onClick: function onClick(e) {\n          if (window.confirm('Do you want leave the character adding?')) _this3.props.history.push(\"/\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Form, {\n        className: \"m-5\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: this.onChangeCharacterName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Short Description\"), React.createElement(Form.Control, (_React$createElement = {\n        type: \"text\",\n        onChange: this.onChangeShortDescr\n      }, _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        onChange: this.onChangeLongDescr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"div\", {\n        className: \"grid-container-img-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control-file\",\n        type: \"file\",\n        name: \"image\",\n        id: \"UploadedFile\",\n        onChange: function onChange(e) {\n          return _this3.onChangeImg(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"output\",\n        className: \"output\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Submit\")), \";\");\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport { Add as default };","map":{"version":3,"sources":["/home/michael/Documents/react-manager-project/react-character-manager/src/Add.js"],"names":["React","Component","axios","NavBarContent","HashRouter","Router","Route","Link","Form","Button","Add","props","onChangeCharacterName","bind","onChangeShortDescr","onChangeLongDescr","onChangeImg","onSubmit","state","name","shortDescription","description","image","e","setState","target","value","preventDefault","reader","FileReader","file","files","output","document","getElementById","onloadend","imagePreviewUrl","result","src","readAsDataURL","i","obj","substr","indexOf","post","then","history","push","console","log","show","alert","window","confirm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBarContent from './NavBarContent';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\n\nexport default class Add extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\n        this.onChangeShortDescr = this.onChangeShortDescr.bind(this);\n        this.onChangeLongDescr = this.onChangeLongDescr.bind(this);\n        this.onChangeImg = this.onChangeImg.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            shortDescription: '',\n            description: '',\n            image: ''\n        }\n\n        const { name } = this.state;\n    }\n\n    /*fct to setStage on change*/\n    onChangeCharacterName(e) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    onChangeShortDescr(e) {\n        this.setState({\n            shortDescription: e.target.value\n        })\n    }\n    onChangeLongDescr(e) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeImg(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        let output = document.getElementById('output');\n\n        //base64 convert\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n            //file preview\n            output.src = reader.result\n        }\n        reader.readAsDataURL(file)\n    }\n\n\n    onSubmit(i) {\n        i.preventDefault();\n        /*check if no empty fieds*/\n        if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl) {\n            const obj = {\n                name: this.state.name,\n                shortDescription: this.state.shortDescription,\n                description: this.state.description,\n                image: this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n            };\n            axios.post('https://character-database.becode.xyz/characters/', obj)\n                .then(\n                    this.props.history.push(\"/\")\n                );\n            console.log(obj);\n            this.setState({\n                name: '',\n                shortDescription: '',\n                description: '',\n                image: '',\n                show: ''\n            })\n        }\n        else {\n            alert(\"No empty field allowed\");\n        }\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <NavBarContent />\n                <Button className=\"w-100 mt-5 btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('Do you want leave the character adding?')) this.props.history.push(\"/\"); }}>Cancel</Button>\n                <Form className=\"m-5\" onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" onChange={this.onChangeCharacterName} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Short Description</Form.Label>\n                        <Form.Control type=\"text\" onChange={this.onChangeShortDescr} type=\"text\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" onChange={this.onChangeLongDescr} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Image</Form.Label>\n                        <div className=\"grid-container-img-add\">\n                            <div className=\"file\"><input className=\"form-control-file\" type=\"file\" name=\"image\" id=\"UploadedFile\" onChange={(e) => this.onChangeImg(e)} /></div>\n                            <div className=\"preview\"><img id=\"output\" className=\"output\" alt=\"\" /></div>\n                        </div>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>;\n                </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}